@model List<OrderBookSystemAdministator.Models.LogModel>

<script>
    function SearchFunction() {
        var input, filter, title, author, tr, i, txtValue, txtValue1, txtValue2, txtValue3;
        input = document.getElementById("searchInput");
        filter = input.value.toUpperCase();
        logsTable = document.getElementById("logsTable");
        tr = logsTable.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            title = tr[i].getElementsByTagName("td")[0];
            author = tr[i].getElementsByTagName("td")[1];
            order_date = tr[i].getElementsByTagName("td")[2];
            returning_date = tr[i].getElementsByTagName("td")[3];
            if (title || author) {
                txtValue = title.textContent || title.innerText;
                txtValue1 = author.textContent || author.innerText;
                txtValue2 = order_date.textContent || order_date.innerText;
                txtValue3 = returning_date.textContent || returning_date.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1 || txtValue1.toUpperCase().indexOf(filter) > -1 || txtValue2.toUpperCase().indexOf(filter) > -1 || txtValue3.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                }
                else {
                    tr[i].style.display = "none";

                }
            }
        }
    }

    function OnKeyUp() {
        var input = document.getElementById("searchInput");
        input.addEventListener("keyup", function (event) {
            if (event.keyCode == 13) {
                event.preventDefault();
                document.getElementById("searchbtn").click();
            }
        });
    }


    $('document').ready(function () { 

        const getCellValue = (tr, idx) => tr.children[idx].innerText || tr.children[idx].textContent;

        const comparer = (idx, asc) => (a, b) => ((v1, v2) =>
            v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2)
        )(getCellValue(asc ? a : b, idx), getCellValue(asc ? b : a, idx));

        // do the work...
        document.querySelectorAll('th').forEach(th => th.addEventListener('click', (() => {
            const table = th.closest('table');
            const tbody = table.querySelector('tbody');
            Array.from(tbody.querySelectorAll('tr'))
                .sort(comparer(Array.from(th.parentNode.children).indexOf(th), this.asc = !this.asc))
                .forEach(tr => tbody.appendChild(tr))
        })));
    });

</script>

<div class="logPage">
    <div class="card" style="width: 100%;  box-shadow: 4px 4px 4px 4px #888888;">
        <div class="card-body">
            <h5 class="card-title">Orders Log</h5>

            <div class="input-group mt-3 mb-4">
                <div class="form-outline">
                    <input style="height: 50px; width: 400px; margin-left: 300px;" type="search" id="searchInput" class="form-control" placeholder="Search" onkeyup="OnKeyUp()" />
                </div>
                <button id="searchbtn" style="width: 50px;" type="button" class="btn btn-primary" onclick="SearchFunction()">
                    <img src="~/icons/search.svg" width="25" height="30" />
                </button>
            </div>
            <table id="logsTable" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                <thead>
                    <tr>
                        <th class="th-sm">
                            No
                        </th>
                        <th class="th-sm">
                            Title
                        </th>
                        <th class="th-sm">
                            Author
                        </th>
                        <th class="th-sm">
                            Type
                        </th>
                        <th class="th-sm">
                            Order Date
                        </th>
                        <th class="th-sm">
                            Returning Date
                        </th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var item in Model)
                    {
                        DateTime defaultDateTime = new DateTime(2000, 01, 01);
                        <tr>
                            <td class="no">@item.no</td>
                            <td class="booktitle">@item.book_title</td>
                            <td class="bookauthor">@item.book_author</td>
                            <td class="booktype">@item.book_type</td>
                            <td class="orderdate">@item.order_date</td>
                            @if (item.returning_date == defaultDateTime)
                            {
                                <td class="returningdate" style="background-color: gray;" data-toggle="tooltip" data-placement="top" title="No Returning Date. This book has purchased."></td>
                            }
                            else
                            {
                                <td class="returningdate" data-toggle="tooltip" data-placement="top" title="This book has a returning date. This book has loaned.">@item.returning_date</td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<style>

    th {
        cursor: pointer;
    }
</style>